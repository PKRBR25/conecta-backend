"""Add language and timestamps to user model

Revision ID: 27dc9f8a346e
Revises: 236481ce2a8f
Create Date: 2025-05-11 18:46:10.915068

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "27dc9f8a346e"
down_revision: Union[str, None] = "236481ce2a8f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "passwordresettoken", sa.Column("is_used", sa.Boolean(), nullable=False)
    )
    op.alter_column(
        "passwordresettoken",
        "expires_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=False,
    )
    op.drop_column("passwordresettoken", "used")
    op.drop_column("passwordresettoken", "created_at")
    op.add_column(
        "user",
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column("user", sa.Column("is_superuser", sa.Boolean(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "is_superuser")
    op.drop_column("user", "full_name")
    op.add_column(
        "passwordresettoken",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "passwordresettoken",
        sa.Column("used", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.alter_column(
        "passwordresettoken",
        "expires_at",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.drop_column("passwordresettoken", "is_used")
    # ### end Alembic commands ###
